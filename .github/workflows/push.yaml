name: Push

on:
  pull_request:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      is_mapping_file_upload_enabled:
        description: 'Upload the Crashlytics mapping file'
        required: false
        type: boolean
        default: false

jobs:
  test-android:
    name: Test (Android)
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - name: JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup composite build caching
        uses: actions/cache@v4
        with:
          path: |
            build-logic/build
            build-logic/convention/build
          key: build-logic-${{ hashFiles('build-logic/*.kts', 'build-logic/convention/src/**', 'build-logic/convention/*.kts') }}

      - name: Kotlin Native cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-konan-${{ github.job }}-${{ github.sha }}
            ${{ runner.os }}-konan-${{ github.job }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Setup signing
        run: |
          # Decode keystore and save in expected place
          echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} > keystore_base64.txt
          base64 -d -i keystore_base64.txt -o app/release.jks
          # Retrieve other secrets and place in expected place
          touch local.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}" >> local.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> local.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> local.properties
          cat local.properties

      - name: Setup Firebase
        run: |
          # Decode the google-services.json from secrets
          echo ${{ secrets.GOOGLE_SERVICES_JSON }} > google-services_base64.txt
          base64 -d -i google-services_base64.txt -o app/google-services.json

      - name: Run local tests
        run: ./gradlew testDebug

      - name: Generate coverage output
        if: github.ref == 'refs/heads/main'
        run: |
          echo "COVERAGE=$(./gradlew -q testDebugUnitTest koverLineCoverage -Pkover koverXmlReport)" >> $GITHUB_ENV

      - name: Update dynamic badge gist
        uses: schneegans/dynamic-badges-action@v1.7.0
        if: github.ref == 'refs/heads/main'
        with:
          auth: ${{secrets.GIST_SECRET}}
          gistID: 446173b9ad64f83674608016425ee4aa
          filename: monica-coverage-badge.json
          label: coverage
          message: ${{env.COVERAGE}}%
          valColorRange: ${{env.COVERAGE}}
          minColorRange: 0
          maxColorRange: 100

  build-android:
    name: Build (Android)
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - name: JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup composite build caching
        uses: actions/cache@v4
        with:
          path: |
            build-logic/build
            build-logic/convention/build
          key: build-logic-${{ hashFiles('build-logic/*.kts', 'build-logic/convention/src/**', 'build-logic/convention/*.kts') }}

      - name: Kotlin Native cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-konan-${{ github.job }}-${{ github.sha }}
            ${{ runner.os }}-konan-${{ github.job }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Setup signing
        run: |
          # Decode keystore and save in expected place
          echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} > keystore_base64.txt
          base64 -d -i keystore_base64.txt -o app/release.jks
          # Retrieve other secrets and place in expected place
          touch local.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}" >> local.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> local.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> local.properties
          cat local.properties

      - name: Setup Firebase
        run: |
          # Decode the google-services.json from secrets
          echo ${{ secrets.GOOGLE_SERVICES_JSON }} > google-services_base64.txt
          base64 -d -i google-services_base64.txt -o app/google-services.json

      - name: Assemble Android
        run: |
          ./gradlew :app:assembleDebug :app:assembleRelease --stacktrace \
            -Pandroid.experimental.settings.executionProfile=ci \
            -PisMappingFileUploadEnabled=${{ github.event.inputs.is_mapping_file_upload_enabled || 'false' }}

      - name: Upload APK (debug)
        uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload APK (release)
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build (iOS Simulator)
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - name: JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup composite build caching
        uses: actions/cache@v4
        with:
          path: |
            build-logic/build
            build-logic/convention/build
          key: build-logic-${{ hashFiles('build-logic/*.kts', 'build-logic/convention/src/**', 'build-logic/convention/*.kts') }}

      - name: Kotlin Native cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-konan-${{ github.job }}-${{ github.sha }}
            ${{ runner.os }}-konan-${{ github.job }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Setup signing
        run: |
          # Decode keystore and save in expected place
          echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} > keystore_base64.txt
          base64 -d -i keystore_base64.txt -o app/release.jks
          # Retrieve other secrets and place in expected place
          touch local.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}" >> local.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> local.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> local.properties
          cat local.properties

      - name: Setup Firebase
        run: |
          # Decode the google-services.json from secrets
          echo ${{ secrets.GOOGLE_SERVICES_JSON }} > google-services_base64.txt
          base64 -d -i google-services_base64.txt -o app/google-services.json

      - name: Build Debug for iOS Simulator
        run: |
          cd iosApp
          sudo xcode-select -s '/Applications/Xcode_16.4.app/Contents/Developer'
          xcodebuild -configuration Debug -scheme iosApp -sdk iphonesimulator
